-------------Searching Product--------------

package com.ecommerce;

import java.math.BigDecimal;
import java.util.Date;

public class EProduct {
	
	 private long ID;
     private String name;
     private BigDecimal price;
     private Date dateAdded;  
     
     public long getID() {return this.ID; }
     public String getName() { return this.name;}
     public BigDecimal getPrice() { return this.price;}
     public Date getDateAdded() { return this.dateAdded;}
     
     public void setID(long id) { this.ID = id;}
     public void setName(String name) { this.name = name;}
     public void setPrice(BigDecimal price) { this.price = price;}
     public void setDateAdded(Date date) { this.dateAdded = date;}   

}














package com.ecommerce.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.*;

import com.ecommerce.EProduct;
import com.ecommerce.dao.EProductDAO;

@Controller
public class ProductController {
	
	@Autowired
	EProductDAO eproductDAO;
	
	@RequestMapping(value = "/listProducts", method = RequestMethod.GET)
	public String listProducts(ModelMap map) {
		List<EProduct> list = eproductDAO.getProducts();
		
		map.addAttribute("listOfProducts", list);
		
		return "list-products"; // go to "list-products.jsp"
	}
	
	@RequestMapping(value = "/addProduct", method = RequestMethod.POST)
	public String addProduct(@RequestParam String name, @RequestParam float price) {
		eproductDAO.addProduct(name, price);

		return "add-product-success"; // go to "add-product-success.jsp"
	}
	@RequestMapping(value = "/deleteProduct", method = RequestMethod.POST)
	public String deleteProduct(@RequestParam int id) {
		eproductDAO.deleteProduct(id);

		return "delete-product-success"; 
	}
	@RequestMapping(value = "/searchproduct", method = RequestMethod.POST)
	public String searchproduct(@RequestParam int id) {
		eproductDAO.searchProduct(id);

		return "search-product-success"; 
	}
}























package com.ecommerce.dao;

import java.sql.*;

import java.util.List;

import org.springframework.jdbc.core.*;

import com.ecommerce.EProduct;

public class EProductDAO {

	JdbcTemplate template;

	public void setTemplate(JdbcTemplate template) {
		this.template = template;
	}

	// Business methods
	public List<EProduct> getProducts() {

		return template.query("select * from eproduct", new RowMapper<EProduct>() {

			public EProduct mapRow(ResultSet rs, int row) throws SQLException {

				EProduct e = new EProduct();
				e.setID(rs.getInt(1));
				e.setName(rs.getString(2));
				e.setPrice(rs.getBigDecimal(3));
				e.setDateAdded(rs.getDate(4));

				return e;
			}

		});

	}
	public List<EProduct> SearchProductsByid(String ID) {

		return template.query("select * from eproduct where name like %"+ID+"%", new RowMapper<EProduct>() {

			public EProduct mapRow(ResultSet rs, int row) throws SQLException {

				EProduct e = new EProduct();

				e.setID(rs.getInt(1));
				e.setName(rs.getString(2));
				e.setPrice(rs.getBigDecimal(3));
				e.setDateAdded(rs.getDate(4));

				return e;
			}
		});

	}
	public void addProduct(String name, float price) {
		String insertSQL = "insert into eproduct(name,price) values(?,?)";
		template.update(insertSQL, new Object[] {name, price});		
	}
	// Update a product price
		public void updateProduct(String id, float price) {
			String updateSQL = "update eproduct set price=? where id=";
			template.update(updateSQL, new Object[] { price, id });
		}
	// Delete a product
		public void deleteProduct(int id) {
			String deleteSQL = "delete from eproduct where id=?";
			template.update(deleteSQL, new Object[] { id });
		}
		 //search a product
			public void searchProduct(int ID) {
				String searchSQL = "SELECT * FROM products WHERE id=?";
					template.update(searchSQL, new Object[] { ID });

}
}





















---------------index.jsp------------------


<br><br>
<h3><a href="add-product.jsp">Add a Product</a></h3>

<br><br>
<h3><a href="search-product.jsp">Search a Product</a></h3>











------------list-products.jsp----------------

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
   <%@ taglib uri="http://www.springframework.org/tags/form" prefix="form"%>    
   <%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>    
       
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>List Products</title>
</head>



<body>
 <c:forEach var="product" items="${listOfProducts}">   
   ${product.name}, ${product.price}, ${product.dateAdded}<br>  
 </c:forEach>  
</body>


</html>


















---------------main-servlet.xml-------------------

<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-2.5.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView"></property>
		<property name="prefix" value="/WEB-INF/view/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages"></property>
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>


	<context:annotation-config />

	<context:component-scan
		base-package="com.ecommerce" />
	<context:component-scan
		base-package="com.ecommerce.dao" />
		<context:component-scan
		base-package="com.ecommerce.controller" />

	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
		p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.databaseurl}" p:username="${jdbc.username}"
		p:password="${jdbc.password}"></bean>


	<bean id="ds"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="com.mysql.jdbc.Driver"></property>
		<property name="url"
			value="jdbc:mysql://localhost:3306/ecommerce"></property>
		<property name="username" value="root"></property>
		<property name="password" value="Mahesh@143225"></property>
	</bean>

	<bean id="jt" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="ds"></property>
	</bean>

	<bean id="dao" class="com.ecommerce.dao.EProductDAO">
		<property name="template" ref="jt"></property>
	</bean>

	<tx:annotation-driven />


</beans>

























-------------------web.xml----------------------------

<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" version="2.5"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<display-name>Archetype Created Web Application</display-name>
	<welcome-file-list>
        <welcome-file >/WEB-INF/view/index.jsp</welcome-file >
    </welcome-file-list>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/main-servlet.xml</param-value>
	</context-param>
	<servlet>
		<servlet-name>main</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>main</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
</web-app>






















-----------------search-product.jsp----------------------

<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>

<h3>Search a product</h3>

<form action="searchProduct" method="POST">

	ID: <input name="id"><br> 

	<input type=submit>

</form>



















-------------------------pom.xml-------------------------------

<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com</groupId>
	<artifactId>ecommerce</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	

	<name>ecommerce Maven Webapp</name>
	<!-- FIXME change it to the project's website -->
	<url>http://www.example.com</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<org.springframework.version>6.0.4</org.springframework.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>

	<dependencies>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.12.1.GA</version>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
		<!--
		https://mvnrepository.com/artifact/jakarta.servlet.jsp/jakarta.servlet.jsp-api -->
		<!--<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>6.0.0</version>
		</dependency>-->
		<!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		<!--
		https://mvnrepository.com/artifact/jakarta.servlet.jsp.jstl/jakarta.servlet.jsp.jstl-api -->
		<dependency>
			<groupId>jakarta.servlet.jsp.jstl</groupId>
			<artifactId>jakarta.servlet.jsp.jstl-api</artifactId>
			<version>3.0.0</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.32</version>
		</dependency>

		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0.2</version>
			<scope>provided</scope>
		</dependency>


		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>ecommerce</finalName>
		<pluginManagement><!-- lock down plugins versions to avoid using Maven
			defaults (may be moved to parent pom) -->
			<plugins>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<!-- see
				http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>3.2.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
